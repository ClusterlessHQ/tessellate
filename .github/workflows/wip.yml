name: Clusterless Wip Build
run-name: "Push: from ${{ github.actor }}"
on:
  push:
    branches:
      - 'wip-*'
    paths-ignore:
      - '*.txt'
      - '*.md'
      - '*.adoc'
jobs:
  run-all-tests-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Env
        run: echo "${{ vars.GRADLE_PROPERTIES }}" > gradle.properties

      - name: Run Tests
        env:
          USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew --no-daemon --info --stacktrace check

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Release and Publish
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_HOMEBREW_GITHUB_TOKEN: ${{ secrets.JRELEASER_HOMEBREW_GITHUB_TOKEN }}
          JRELEASER_DOCKER_GITHUB_TOKEN: ${{ secrets.JRELEASER_DOCKER_GITHUB_TOKEN }}
        run: |
          ./gradlew --no-daemon --info --stacktrace release

      - name: Archive Release Log
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-log
          path: |
            tessellate-main/build/jreleaser/trace.log
            tessellate-main/build/jreleaser/output.properties
